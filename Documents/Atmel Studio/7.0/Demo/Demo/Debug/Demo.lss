
Demo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  0000018c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000138  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000018c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001bc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b08  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a31  00000000  00000000  00000d2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002f9  00000000  00000000  0000175d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001a58  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004b3  00000000  00000000  00001a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000028  00000000  00000000  00001f3f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001f67  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	65 c0       	rjmp	.+202    	; 0xcc <__ctors_end>
   2:	00 00       	nop
   4:	6d c0       	rjmp	.+218    	; 0xe0 <__bad_interrupt>
   6:	00 00       	nop
   8:	6b c0       	rjmp	.+214    	; 0xe0 <__bad_interrupt>
   a:	00 00       	nop
   c:	69 c0       	rjmp	.+210    	; 0xe0 <__bad_interrupt>
   e:	00 00       	nop
  10:	67 c0       	rjmp	.+206    	; 0xe0 <__bad_interrupt>
  12:	00 00       	nop
  14:	65 c0       	rjmp	.+202    	; 0xe0 <__bad_interrupt>
  16:	00 00       	nop
  18:	63 c0       	rjmp	.+198    	; 0xe0 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	61 c0       	rjmp	.+194    	; 0xe0 <__bad_interrupt>
  1e:	00 00       	nop
  20:	5f c0       	rjmp	.+190    	; 0xe0 <__bad_interrupt>
  22:	00 00       	nop
  24:	5d c0       	rjmp	.+186    	; 0xe0 <__bad_interrupt>
  26:	00 00       	nop
  28:	5b c0       	rjmp	.+182    	; 0xe0 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	59 c0       	rjmp	.+178    	; 0xe0 <__bad_interrupt>
  2e:	00 00       	nop
  30:	57 c0       	rjmp	.+174    	; 0xe0 <__bad_interrupt>
  32:	00 00       	nop
  34:	55 c0       	rjmp	.+170    	; 0xe0 <__bad_interrupt>
  36:	00 00       	nop
  38:	53 c0       	rjmp	.+166    	; 0xe0 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	51 c0       	rjmp	.+162    	; 0xe0 <__bad_interrupt>
  3e:	00 00       	nop
  40:	4f c0       	rjmp	.+158    	; 0xe0 <__bad_interrupt>
  42:	00 00       	nop
  44:	4d c0       	rjmp	.+154    	; 0xe0 <__bad_interrupt>
  46:	00 00       	nop
  48:	4b c0       	rjmp	.+150    	; 0xe0 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	49 c0       	rjmp	.+146    	; 0xe0 <__bad_interrupt>
  4e:	00 00       	nop
  50:	47 c0       	rjmp	.+142    	; 0xe0 <__bad_interrupt>
  52:	00 00       	nop
  54:	45 c0       	rjmp	.+138    	; 0xe0 <__bad_interrupt>
  56:	00 00       	nop
  58:	43 c0       	rjmp	.+134    	; 0xe0 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	41 c0       	rjmp	.+130    	; 0xe0 <__bad_interrupt>
  5e:	00 00       	nop
  60:	3f c0       	rjmp	.+126    	; 0xe0 <__bad_interrupt>
  62:	00 00       	nop
  64:	3d c0       	rjmp	.+122    	; 0xe0 <__bad_interrupt>
  66:	00 00       	nop
  68:	3b c0       	rjmp	.+118    	; 0xe0 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	39 c0       	rjmp	.+114    	; 0xe0 <__bad_interrupt>
  6e:	00 00       	nop
  70:	37 c0       	rjmp	.+110    	; 0xe0 <__bad_interrupt>
  72:	00 00       	nop
  74:	35 c0       	rjmp	.+106    	; 0xe0 <__bad_interrupt>
  76:	00 00       	nop
  78:	33 c0       	rjmp	.+102    	; 0xe0 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	31 c0       	rjmp	.+98     	; 0xe0 <__bad_interrupt>
  7e:	00 00       	nop
  80:	2f c0       	rjmp	.+94     	; 0xe0 <__bad_interrupt>
  82:	00 00       	nop
  84:	2d c0       	rjmp	.+90     	; 0xe0 <__bad_interrupt>
  86:	00 00       	nop
  88:	2b c0       	rjmp	.+86     	; 0xe0 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	29 c0       	rjmp	.+82     	; 0xe0 <__bad_interrupt>
  8e:	00 00       	nop
  90:	27 c0       	rjmp	.+78     	; 0xe0 <__bad_interrupt>
  92:	00 00       	nop
  94:	25 c0       	rjmp	.+74     	; 0xe0 <__bad_interrupt>
  96:	00 00       	nop
  98:	23 c0       	rjmp	.+70     	; 0xe0 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	21 c0       	rjmp	.+66     	; 0xe0 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	1f c0       	rjmp	.+62     	; 0xe0 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	1d c0       	rjmp	.+58     	; 0xe0 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	1b c0       	rjmp	.+54     	; 0xe0 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	19 c0       	rjmp	.+50     	; 0xe0 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	17 c0       	rjmp	.+46     	; 0xe0 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	15 c0       	rjmp	.+42     	; 0xe0 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	13 c0       	rjmp	.+38     	; 0xe0 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	11 c0       	rjmp	.+34     	; 0xe0 <__bad_interrupt>
  be:	00 00       	nop
  c0:	0f c0       	rjmp	.+30     	; 0xe0 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	0d c0       	rjmp	.+26     	; 0xe0 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	0b c0       	rjmp	.+22     	; 0xe0 <__bad_interrupt>
	...

000000cc <__ctors_end>:
  cc:	11 24       	eor	r1, r1
  ce:	1f be       	out	0x3f, r1	; 63
  d0:	cf ef       	ldi	r28, 0xFF	; 255
  d2:	d1 e2       	ldi	r29, 0x21	; 33
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	cd bf       	out	0x3d, r28	; 61
  d8:	00 e0       	ldi	r16, 0x00	; 0
  da:	0c bf       	out	0x3c, r16	; 60
  dc:	1f d0       	rcall	.+62     	; 0x11c <main>
  de:	2a c0       	rjmp	.+84     	; 0x134 <_exit>

000000e0 <__bad_interrupt>:
  e0:	8f cf       	rjmp	.-226    	; 0x0 <__vectors>

000000e2 <wait>:
 */ 

#include <avr/io.h>

void wait(uint16_t delay){
	while (delay>0)
  e2:	19 c0       	rjmp	.+50     	; 0x116 <wait+0x34>
	...
		asm("NOP");asm("NOP");asm("NOP");asm("NOP");
		asm("NOP");asm("NOP");asm("NOP");asm("NOP");
		asm("NOP");asm("NOP");asm("NOP");asm("NOP");
		asm("NOP");asm("NOP");asm("NOP");asm("NOP");
		
		delay--;
 114:	01 97       	sbiw	r24, 0x01	; 1
 */ 

#include <avr/io.h>

void wait(uint16_t delay){
	while (delay>0)
 116:	00 97       	sbiw	r24, 0x00	; 0
 118:	29 f7       	brne	.-54     	; 0xe4 <wait+0x2>
		asm("NOP");asm("NOP");asm("NOP");asm("NOP");
		asm("NOP");asm("NOP");asm("NOP");asm("NOP");
		
		delay--;
	}
}
 11a:	08 95       	ret

0000011c <main>:
int main(void)
{
    
    while (1) 
    {
		DDRA = 0b00000011;
 11c:	c3 e0       	ldi	r28, 0x03	; 3
 11e:	c1 b9       	out	0x01, r28	; 1
		PORTA =0b000000000;
 120:	12 b8       	out	0x02, r1	; 2
		
		wait(10000);
 122:	80 e1       	ldi	r24, 0x10	; 16
 124:	97 e2       	ldi	r25, 0x27	; 39
 126:	dd df       	rcall	.-70     	; 0xe2 <wait>
		PORTA=0b00000011;
 128:	c2 b9       	out	0x02, r28	; 2
		wait(10000);
 12a:	80 e1       	ldi	r24, 0x10	; 16
 12c:	97 e2       	ldi	r25, 0x27	; 39
 12e:	d9 df       	rcall	.-78     	; 0xe2 <wait>
		PORTA=0b000000000;
 130:	12 b8       	out	0x02, r1	; 2
 132:	f4 cf       	rjmp	.-24     	; 0x11c <main>

00000134 <_exit>:
 134:	f8 94       	cli

00000136 <__stop_program>:
 136:	ff cf       	rjmp	.-2      	; 0x136 <__stop_program>
